

------------------------------------------------------------
 NG core concepts
 ------------------------------------------------------------

------------------------------------------------------------
 A.data binding
 ------------------------------------------------------------

  4 types 
  --------
    1. interpolation
    ------------------
      => to place any dynamic expression
      syntax:
      --------
      in template,
        {{expression}}   

    2. property 
    ------------
      => to bind any data element/component property
      syntax:
      --------    
      <element [property-name]="expression"/>

    3. event 
    ---------
      syntax
      --------
      <element (event-name)="handler($event)"/>

------------------------------------------------------------
 B. directives
 ------------------------------------------------------------

  ==> instructions to render dynamic content on UI

  3 types
  ---------

  a. component   = directive + template
  ---------------------------------------

      ==> always bring new UI fragment to UI

      <component></component>

  b. structural directive
  ------------------------

      ==> to change component's template structure

      syntax:
      --------

      <element *directive="expression"/>

  c. attribute directive
  ------------------------

    ==> to change element's attribute values

      syntax
      --------

      <element [directive]="expression"/>

-------------------------------------------------------------------
Services
-------------------------------------------------------------------

  design issues  with component(s) only
  --------------------------------------

  ==> state & state change logic scattered across multiple components
  ==> if we need same state on multiple components,
      either we should duplicate or pass as input properties to child components
  ==> cannot re-use same component with different state.
  ==> difficult to apply unit testing

  soln:

      ==> using angular 'service' objects

---------------------------------------------------------------
Async HTTP calls
---------------------------------------------------------------

How ?

HTTP module

------------------------------------------------------------



---------------------------------------------------------------
Handling Forms 
---------------------------------------------------------------

How?

  a. FormsModule   ==> template-driven-form i.e managing form functionalities at template level
  -or-
  b. ReactiveFormModule ==> i.e handling form using rxjs concepts



how handle form in NG ?


  step-1 : must create 'FormGroup' object with 'FormControl'(s) 
           for each form element in component

           
